{"version":3,"sources":["pages/Main/hooks.ts","pages/Main/index.ts","pages/Main/Main.tsx","components/ReposList/ReposList.tsx","components/ReposList/index.ts","components/FilesList/FilesList.tsx","components/FilesList/index.ts","components/ReadMeContent/ReadMeContent.tsx","components/ReadMeContent/index.ts","server.ts","pages/Repos/hooks.ts","pages/Repos/index.ts","pages/Repos/Repos.tsx","pages/Files/hooks.ts","pages/Files/index.ts","pages/Files/Files.tsx","layouts/NavBar/index.ts","layouts/NavBar/NavBar.tsx","layouts/PageWrapper/index.ts","layouts/PageWrapper/PageWrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useEffects","history","useHistory","useState","userName","setUserName","handleChange","e","target","value","handleKeyPress","key","push","Main","TextField","onKeyDown","onChange","variant","placeholder","InputProps","startAdornment","InputAdornment","position","endAdornment","style","width","useStyles","makeStyles","root","maxWidth","overflow","maxHeight","ReposList","username","repos","classes","List","className","map","id","name","to","textDecoration","color","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","Divider","component","FilesList","files","type","Fragment","marginTop","ReadMeContent","content","ref","useRef","useEffect","current","render","remarkPlugins","gfm","children","Grid","container","direction","alignItems","instance","axios","create","baseURL","responseBody","response","data","getRequest","url","get","then","getRepos","getFiles","repository","getReadMe","setRepos","loading","setLoading","isError","setIsError","useParams","a","repositories","fetchRepos","Repos","CircularProgress","length","setFiles","loadingReadMe","setLoadingReadMe","readMeContent","setReadMeContent","fetchFiles","fetchReadMe","atob","Files","margin","NavBar","AppBar","minHeight","Toolbar","Typography","IconButton","edge","aria-label","PageWrapper","padding","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67952250.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst useEffects = () => {\n  const history = useHistory();\n  const [userName, setUserName] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserName(e.target.value);\n  }\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if(e.key === 'Enter'){\n      history.push(`repos/${userName}`);\n    }\n  }\n\n  return {\n    userName,\n    handleChange,\n    handleKeyPress\n  }\n}\n\nexport default useEffects;","import Main from './Main';\n\nexport default Main;\n","import React from 'react';\nimport { TextField, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport useEffects from './hooks';\n\nconst Main: React.FC = () => {\n  const { userName, handleChange, handleKeyPress} = useEffects();\n  return (\n    <>\n      <TextField\n        value={userName}\n        onKeyDown={handleKeyPress}\n        onChange={handleChange}\n        variant=\"outlined\"\n        placeholder=\"Search github user\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\"><AccountCircle /></InputAdornment>,\n          endAdornment: <InputAdornment position=\"start\"><SearchIcon /></InputAdornment>\n        }}\n        style={{ width: 400 }}/>\n    </>\n  );\n};\n\nexport default Main;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Avatar,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WorkIcon from '@material-ui/icons/Work';\nimport { Repo } from '../../types';\n\ntype ReposListProps = {\n  username: string;\n  repos: Repo[];\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    overflow: 'auto',\n    maxHeight: '60vh'\n  },\n});\n\nconst ReposList: React.FC<ReposListProps> = ({ username = '', repos = [] }) => {\n  const classes = useStyles();\n  return (\n    <List className={classes.root}>\n      { repos.map(({ id, name}) =>\n        <Link to={`/files/${username}/${name}`} key={id} style={{ textDecoration: 'none', color: 'black' }}>\n          <ListItem button>\n            <ListItemAvatar>\n              <Avatar>\n                <WorkIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={name} />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n        </Link>\n      )}\n    </List>\n  );\n};\n\nexport default ReposList;\n","import ReposList from './ReposList';\n\nexport default ReposList;\n","import React from 'react';\nimport {\n  Avatar,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { File } from '../../types';\n\ntype FilesListProps = {\n  files: File[];\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    overflow: 'auto',\n    maxHeight: '60vh'\n  }\n});\n\nconst FilesList: React.FC<FilesListProps> = ({ files= [] }) => {\n  const classes = useStyles();\n  return (\n    <List className={classes.root}>\n      { files.map(({ name, type}) =>\n        <React.Fragment key={name}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                {type === 'dir'\n                  ? <FolderIcon />\n                  : <FileIcon />}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={name} />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n        </React.Fragment>\n      )}\n    </List>\n  );\n};\n\nexport default FilesList;\n","import FilesList from './FilesList';\n\nexport default FilesList;\n","import React, { useRef, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { Grid} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\ntype ReadMeContentProps = {\n  content: string;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 700,\n    marginTop: '7vh'\n  },\n});\n\nconst ReadMeContent: React.FC<ReadMeContentProps> = ({ content = '' }) => {\n  const classes = useStyles();\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current) {\n      render(<ReactMarkdown remarkPlugins={[gfm]} children={content} />, ref.current);\n    }\n  }, [ref, content]);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.root}\n    >\n      <div ref={ref} id=\"readme\" />\n    </Grid>\n  );\n};\n\nexport default ReadMeContent;\n","import ReadMeContent from './ReadMeContent';\n\nexport default ReadMeContent;\n","import axios, { AxiosResponse } from 'axios';\nimport { File, ReadMeFile, Repo } from './types';\n\nconst instance = axios.create({ baseURL: 'https://api.github.com/' });\n\nconst responseBody = (response: AxiosResponse) => response.data;\nconst getRequest = (url: string) => instance.get(url).then(responseBody)\n\nexport const getRepos = (username: string): Promise<Repo[]> =>\n  getRequest(`users/${username}/repos`);\n\nexport const getFiles = (username: string, repository: string): Promise<File[]> =>\n  getRequest(`repos/${username}/${repository}/contents`);\n\nexport const getReadMe = (username: string, repository: string): Promise<ReadMeFile> =>\n  getRequest(`/repos/${username}/${repository}/readme`);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRepos } from '../../server';\nimport { ReposParamTypes, Repo } from '../../types';\n\nconst useEffects = () => {\n  const [repos, setRepos] = useState<Repo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const { username } = useParams<ReposParamTypes>();\n\n  useEffect(() => {\n    const fetchRepos = async () => {\n      try {\n        const repositories = await getRepos(username);\n        setRepos(repositories);\n      } catch (e) {\n        setIsError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRepos();\n  }, [username]);\n\n  return {\n    isError,\n    loading,\n    username,\n    repos\n  };\n}\n\nexport default useEffects;\n","import Repos from './Repos';\n\nexport default Repos;\n","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport { ReposList } from '../../components'\nimport useEffects from './hooks';\n\nconst Repos: React.FC = () => {\n  const { isError, loading, username, repos } = useEffects();\n  if (isError) {\n    return ( <h1 style={{ color: 'red' }}> No user named {username} </h1> );\n  }\n\n  if (loading) {\n    return ( <CircularProgress /> );\n  }\n\n  if (!repos.length) {\n    return ( <h1> {username} has no repositories </h1> );\n  }\n\n  return (\n    <>\n      <h1> {username} repositories: </h1>\n      <ReposList repos={repos} username={username}/>\n    </>\n  );\n};\n\nexport default Repos;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFiles, getReadMe } from '../../server';\nimport { FilesParamTypes, File } from '../../types';\n\nconst useEffects = () => {\n  const [files, setFiles] = useState<File[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [loadingReadMe, setLoadingReadMe] = useState(true);\n  const [readMeContent, setReadMeContent] = useState('');\n  const { username, repository } = useParams<FilesParamTypes>();\n\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const repositories = await getFiles(username, repository);\n        setFiles(repositories);\n      } catch (e) {\n        setIsError(true);\n      } finally {\n        setLoadingReadMe(false);\n      }\n    };\n\n    const fetchReadMe = async () => {\n      try {\n        const { content } = await getReadMe(username, repository);\n        setReadMeContent(atob(content));\n      } catch (e) {\n        return;\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFiles();\n    fetchReadMe();\n  }, [username, repository]);\n\n  return {\n    isError,\n    loading,\n    loadingReadMe,\n    username,\n    repository,\n    files,\n    readMeContent\n  };\n}\n\nexport default useEffects;\n","import Files from './Files';\n\nexport default Files;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CircularProgress } from '@material-ui/core';\nimport { FilesList, ReadMeContent } from '../../components';\nimport useEffects from './hooks';\n\nconst Files: React.FC = () => {\n  const {\n    isError,\n    loading,\n    username,\n    repository,\n    files,\n    loadingReadMe,\n    readMeContent\n  } = useEffects();\n  if (isError) {\n    return (\n      <h1 style={{ color: 'red' }}>\n        No user named {username} with repository {repository}\n      </h1>\n    );\n  }\n\n  if (loading) {\n    return ( <CircularProgress /> );\n  }\n\n  return (\n    <>\n      <h1>\n        User:\n        <Link\n          to={`/repos/${username}`}\n          style={{ color: 'black', margin: ' 0 1vh' }}\n        >\n          {username},\n        </Link>\n        repository content of {repository}:\n      </h1>\n      <FilesList files={files} />\n      {loadingReadMe\n        ? <CircularProgress />\n        : <ReadMeContent content={readMeContent} />\n      }\n    </>\n  );\n};\n\nexport default Files;\n","import NavBar from './NavBar';\n\nexport default NavBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton\n} from '@material-ui/core';\nimport GithubIcon from '@material-ui/icons/GitHub';\n\nconst NavBar = () => {\n  return (\n    <AppBar position=\"static\" style={{ minHeight: '5vh' }}>\n      <Toolbar>\n        <Typography variant=\"h6\">\n          <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <GithubIcon />\n            </IconButton>\n            Github search app\n          </Link>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import PageWrapper from './PageWrapper';\n\nexport default PageWrapper;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\ntype PageContentProps = {\n  children: React.ReactNode;\n}\n\nconst PageWrapper: React.FC<PageContentProps> = ({ children }) => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      style={{ width: '100%', minHeight: '90vh', padding: '5vh' }}\n    >\n      { children }\n    </Grid>\n  );\n};\n\nexport default PageWrapper;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main, Repos, Files } from './pages';\nimport { NavBar, PageWrapper } from './layouts';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <NavBar />\n      <PageWrapper>\n        <Switch>\n          <Route component={Main} path=\"/\" exact />\n          <Route component={Repos} path=\"/repos/:username\" />\n          <Route component={Files} path=\"/files/:username/:repository\" />\n        </Switch>\n      </PageWrapper>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}